def tf_servering_model(input_checkpoint_dir, output_graph):
    cp_file = tf.train.latest_checkpoint(input_checkpoint_dir)
    saver = tf.train.import_meta_graph('{}.meta'.format(cp_file))

    graph = tf.get_default_graph() # 获得默认的图
    builder = tf.saved_model.builder.SavedModelBuilder(input_checkpoint_dir+'/1')
    
    with tf.Session() as sess:
        saver.restore(sess, cp_file) #恢复图并得到数据
        input_ids = graph.get_operation_by_name('input_ids').outputs[0]
        input_mask = graph.get_operation_by_name('input_mask').outputs[0]
        segment_ids = graph.get_operation_by_name('segment_ids').outputs[0]
        is_training = graph.get_operation_by_name('is_training').outputs[0]

        probs =  graph.get_operation_by_name('loss/probs').outputs[0]
        pred_labels = graph.get_operation_by_name('loss/pred_labels').outputs[0]

        tensor_info_input_ids = tf.saved_model.utils.build_tensor_info(input_ids)
        tensor_info_input_mask = tf.saved_model.utils.build_tensor_info(input_mask)
        tensor_info_segment_ids = tf.saved_model.utils.build_tensor_info(segment_ids)
        tensor_info_is_training = tf.saved_model.utils.build_tensor_info(is_training)

        tensor_info_probs = tf.saved_model.utils.build_tensor_info(probs)
        tensor_info_pred_labels = tf.saved_model.utils.build_tensor_info(pred_labels)

        prediction_signature = (
            tf.saved_model.signature_def_utils.build_signature_def(
            inputs={'input_ids': tensor_info_input_ids,
                    'input_mask': tensor_info_input_mask,
                    'segment_ids': tensor_info_segment_ids,
                    'is_training': tensor_info_is_training},
            outputs={'probs': tensor_info_probs,
                     'pred_labels': tensor_info_pred_labels},
            method_name=tf.saved_model.signature_constants.PREDICT_METHOD_NAME))

        builder.add_meta_graph_and_variables(
            sess, [tf.saved_model.tag_constants.SERVING],
            signature_def_map={
                'predict_text': prediction_signature,
            },
            main_op=tf.tables_initializer())
            
        builder.save()